[{"path":[]},{"path":"https://butcher.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://butcher.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://butcher.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://butcher.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://butcher.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://butcher.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://butcher.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://butcher.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://butcher.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://butcher.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://butcher.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://butcher.tidymodels.org/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Joyce Cahoon Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://butcher.tidymodels.org/dev/articles/adding-models-to-butcher.html","id":"recap","dir":"Articles","previous_headings":"","what":"Recap","title":"Adding models to butcher","text":"Adding new model object butcher: Run new_model_butcher(model_class = \"blob\", package_name = \"blobber\") Use butcher helper functions butcher::weigh() butcher::locate() decide axe Finalize edits R/blob.R tests/testthat/test-blob.R Make pull request!","code":""},{"path":"https://butcher.tidymodels.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joyce Cahoon. Author. Davis Vaughan. Author, maintainer. Max Kuhn. Author. Alex Hayes. Author. . Copyright holder, funder.","code":""},{"path":"https://butcher.tidymodels.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cahoon J, Vaughan D, Kuhn M, Hayes (2022). butcher: Model Butcher. https://butcher.tidymodels.org/, https://github.com/tidymodels/butcher.","code":"@Manual{,   title = {butcher: Model Butcher},   author = {Joyce Cahoon and Davis Vaughan and Max Kuhn and Alex Hayes},   year = {2022},   note = {https://butcher.tidymodels.org/, https://github.com/tidymodels/butcher}, }"},{"path":[]},{"path":"https://butcher.tidymodels.org/dev/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Model Butcher","text":"Modeling pipelines R occasionally result fitted model objects take much memory. two main culprits: Heavy dependencies formulas closures capture enclosing environment modeling process; Lack selectivity construction model object . result, fitted model objects carry components often redundant required post-fit estimation activities. butcher makes easy axe parts fitted output longer needed, without sacrificing much functionality original model object.","code":""},{"path":"https://butcher.tidymodels.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model Butcher","text":"Install released version CRAN: install development version GitHub:","code":"install.packages(\"butcher\") # install.packages(\"devtools\") devtools::install_github(\"tidymodels/butcher\")"},{"path":"https://butcher.tidymodels.org/dev/index.html","id":"butchering","dir":"","previous_headings":"","what":"Butchering","title":"Model Butcher","text":"make memory available, package provides five S3 generics remove parts model object: axe_call(): remove call object. axe_ctrl(): remove controls associated training. axe_data(): remove original training data. axe_env(): remove environments. axe_fitted(): remove fitted values. example, wrap lm model: lm exists modeling pipeline : , fact, require: understand part original model object taking memory, leverage weigh() function: problem terms component big_lm. lm implemented stats package, environment (model made) also carried along fitted output. remove (mostly) extraneous component, can use axe_env(): Comparing small_lm, ’ll find: …now takes memory disk small_lm: Axing environment functionality butcher. can also remove call, ctrl, data fitted_values, simply run butcher() execute axing functions . kind axing object append butchered class current model object class(es) well new attribute named butcher_disabled lists post-fit estimation functions disabled result.","code":"library(butcher) our_model <- function() {   some_junk_in_the_environment <- runif(1e6) # we didn't know about   lm(mpg ~ ., data = mtcars)  } library(lobstr) obj_size(our_model()) #> 8,022,440 B small_lm <- lm(mpg ~ ., data = mtcars)  obj_size(small_lm) #> 22,224 B big_lm <- our_model() butcher::weigh(big_lm) #> # A tibble: 25 × 2 #>    object            size #>    <chr>            <dbl> #>  1 terms         8.01     #>  2 qr.qr         0.00666  #>  3 residuals     0.00286  #>  4 fitted.values 0.00286  #>  5 effects       0.0014   #>  6 coefficients  0.00109  #>  7 call          0.000728 #>  8 model.mpg     0.000304 #>  9 model.cyl     0.000304 #> 10 model.disp    0.000304 #> # … with 15 more rows cleaned_lm <- butcher::axe_env(big_lm, verbose = TRUE) butcher::weigh(cleaned_lm) #> # A tibble: 25 × 2 #>    object            size #>    <chr>            <dbl> #>  1 terms         0.00789  #>  2 qr.qr         0.00666  #>  3 residuals     0.00286  #>  4 fitted.values 0.00286  #>  5 effects       0.0014   #>  6 coefficients  0.00109  #>  7 call          0.000728 #>  8 model.mpg     0.000304 #>  9 model.cyl     0.000304 #> 10 model.disp    0.000304 #> # … with 15 more rows butcher::weigh(small_lm) #> # A tibble: 25 × 2 #>    object            size #>    <chr>            <dbl> #>  1 terms         0.00781  #>  2 qr.qr         0.00666  #>  3 residuals     0.00286  #>  4 fitted.values 0.00286  #>  5 effects       0.0014   #>  6 coefficients  0.00109  #>  7 call          0.000728 #>  8 model.mpg     0.000304 #>  9 model.cyl     0.000304 #> 10 model.disp    0.000304 #> # … with 15 more rows"},{"path":"https://butcher.tidymodels.org/dev/index.html","id":"model-object-coverage","dir":"","previous_headings":"","what":"Model Object Coverage","title":"Model Butcher","text":"Check vignette(\"available-axe-methods\") see butcher’s current coverage. working new model object benefit kind axing, love make pull request! can visit vignette(\"adding-models--butcher\") guidelines, short, contribute set axe methods: Run new_model_butcher(model_class = \"your_object\", package_name = \"your_package\") Use butcher helper functions butcher::weigh() butcher::locate() decide axe Finalize edits R/your_object.R tests/testthat/test-your_object.R Make pull request!","code":""},{"path":"https://butcher.tidymodels.org/dev/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Model Butcher","text":"project released Contributor Code Conduct. contributing project, agree abide terms. questions discussions tidymodels packages, modeling, machine learning, please post RStudio Community. think encountered bug, please submit issue. Either way, learn create share reprex (minimal, reproducible example), clearly communicate code. Check details contributing guidelines tidymodels packages get help.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-C5.0.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing a C5.0. — axe-C5.0","title":"Axing a C5.0. — axe-C5.0","text":"C5.0 objects created C50 package, provides interface C5.0 classification model. models can generated include basic tree-based models well rule-based models.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-C5.0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing a C5.0. — axe-C5.0","text":"","code":"# S3 method for C5.0 axe_call(x, verbose = FALSE, ...)  # S3 method for C5.0 axe_ctrl(x, verbose = FALSE, ...)  # S3 method for C5.0 axe_fitted(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-C5.0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing a C5.0. — axe-C5.0","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-C5.0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing a C5.0. — axe-C5.0","text":"Axed C5.0 object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-C5.0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing a C5.0. — axe-C5.0","text":"","code":"# Load libraries suppressWarnings(suppressMessages(library(parsnip))) suppressWarnings(suppressMessages(library(rsample))) suppressWarnings(suppressMessages(library(rpart)))  # Load data set.seed(1234) split <- initial_split(kyphosis, props = 9/10) spine_train <- training(split)  # Create model and fit c5_fit <- decision_tree(mode = \"classification\") %>%   set_engine(\"C5.0\") %>%   fit(Kyphosis ~ ., data = spine_train)  out <- butcher(c5_fit, verbose = TRUE) #> ✖ No memory released. Do not butcher.  # Try another model from parsnip c5_fit2 <- boost_tree(mode = \"classification\", trees = 100) %>%   set_engine(\"C5.0\") %>%   fit(Kyphosis ~ ., data = spine_train) out <- butcher(c5_fit2, verbose = TRUE) #> ✖ No memory released. Do not butcher.  # Create model object from original library library(C50) library(modeldata) data(mlc_churn) c5_fit3 <- C5.0(x = mlc_churn[, -20], y = mlc_churn$churn) out <- butcher(c5_fit3, verbose = TRUE) #> ✔ Memory released: \"6.28 kB\" #> ✖ Disabled: `print()`, `summary()`, `C5.0Control()`, and `C5imp()`"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-classbagg.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing a classbagg object. — axe-classbagg","title":"Axing a classbagg object. — axe-classbagg","text":"classbagg objects created ipred package, leverages various resampling bagging techniques improve predictive models.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-classbagg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing a classbagg object. — axe-classbagg","text":"","code":"# S3 method for classbagg axe_call(x, verbose = FALSE, ...)  # S3 method for classbagg axe_data(x, verbose = FALSE, ...)  # S3 method for classbagg axe_env(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-classbagg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing a classbagg object. — axe-classbagg","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-classbagg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing a classbagg object. — axe-classbagg","text":"Axed classbagg object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-classbagg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing a classbagg object. — axe-classbagg","text":"","code":"# Load libraries suppressWarnings(suppressMessages(library(ipred))) suppressWarnings(suppressMessages(library(rpart))) suppressWarnings(suppressMessages(library(MASS)))  # Load data data(\"GlaucomaM\", package = \"TH.data\")  classbagg_fit <- bagging(Class ~ ., data = GlaucomaM, coob = TRUE)  out <- butcher(classbagg_fit, verbose = TRUE) #> ✔ Memory released: \"2.88 MB\" #> ✖ Disabled: `print()` and `summary()`  # Fit another model data(\"DLBCL\", package = \"ipred\")  mod <- bagging(Gene.Expression ~ MGEc.1 + MGEc.2 + MGEc.3 + MGEc.4 + IPI,                data = DLBCL,                coob = TRUE)  out <- butcher(mod, verbose = TRUE) #> ✔ Memory released: \"4.46 MB\" #> ✖ Disabled: `print()` and `summary()`"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-earth.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing an earth object. — axe-earth","title":"Axing an earth object. — axe-earth","text":"earth objects created earth package, leveraged multivariate adaptive regression splines.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-earth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing an earth object. — axe-earth","text":"","code":"# S3 method for earth axe_call(x, verbose = FALSE, ...)  # S3 method for earth axe_data(x, verbose = FALSE, ...)  # S3 method for earth axe_fitted(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-earth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing an earth object. — axe-earth","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-earth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing an earth object. — axe-earth","text":"Axed earth object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-earth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing an earth object. — axe-earth","text":"","code":"# Load libraries suppressWarnings(suppressMessages(library(parsnip)))  # Create model and fit earth_fit <- mars(mode = \"regression\") %>%   set_engine(\"earth\") %>%   fit(Volume ~ ., data = trees)  out <- butcher(earth_fit, verbose = TRUE) #> ✖ No memory released. Do not butcher.  # Another earth model object suppressWarnings(suppressMessages(library(earth))) earth_mod <- earth(Volume ~ ., data = trees) out <- butcher(earth_mod, verbose = TRUE) #> ✖ No memory released. Do not butcher."},{"path":"https://butcher.tidymodels.org/dev/reference/axe-elnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing an elnet. — axe-elnet","title":"Axing an elnet. — axe-elnet","text":"elnet objects created glmnet package, leveraged fit generalized linear models via penalized maximum likelihood.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-elnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing an elnet. — axe-elnet","text":"","code":"# S3 method for elnet axe_call(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-elnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing an elnet. — axe-elnet","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-elnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing an elnet. — axe-elnet","text":"Axed model object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-elnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing an elnet. — axe-elnet","text":"","code":"# \\donttest{ if (rlang::is_installed(\"glmnet\")) {  # Load libraries suppressWarnings(suppressMessages(library(parsnip))) suppressWarnings(suppressMessages(library(rsample)))  # Load data split <- initial_split(mtcars, props = 9/10) car_train <- training(split)  # Create model and fit elnet_fit <- linear_reg(mixture = 0, penalty = 0.1) %>%   set_engine(\"glmnet\") %>%   fit_xy(x = car_train[, 2:11], y = car_train[, 1, drop = FALSE])  out <- butcher(elnet_fit, verbose = TRUE)  } # }"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-flexsurvreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing an flexsurvreg. — axe-flexsurvreg","title":"Axing an flexsurvreg. — axe-flexsurvreg","text":"flexsurvreg objects created flexsurv package. differ survreg fitted models limited certain parametric distributions. Users can define distribution, leverage distributions like generalized gamma, generalized F, Royston-Parmar spline model.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-flexsurvreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing an flexsurvreg. — axe-flexsurvreg","text":"","code":"# S3 method for flexsurvreg axe_call(x, verbose = FALSE, ...)  # S3 method for flexsurvreg axe_env(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-flexsurvreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing an flexsurvreg. — axe-flexsurvreg","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-flexsurvreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing an flexsurvreg. — axe-flexsurvreg","text":"Axed flexsurvreg object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-flexsurvreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing an flexsurvreg. — axe-flexsurvreg","text":"","code":"# Load libraries suppressWarnings(suppressMessages(library(parsnip))) suppressWarnings(suppressMessages(library(flexsurv)))  # Create model and fit flexsurvreg_fit <- surv_reg(mode = \"regression\", dist = \"gengamma\") %>%   set_engine(\"flexsurv\") %>%   fit(Surv(Tstart, Tstop, status) ~ trans, data = bosms3) #> Warning: `surv_reg()` was deprecated in parsnip 0.1.6. #> Please use `survival_reg()` instead.  out <- butcher(flexsurvreg_fit, verbose = TRUE) #> ✖ No memory released. Do not butcher.  # Another flexsurvreg model object wrapped_flexsurvreg <- function() {   some_junk_in_environment <- runif(1e6)   fit <- flexsurvreg(Surv(futime, fustat) ~ 1,                      data = ovarian, dist = \"weibull\")   return(fit) }  out <- butcher(wrapped_flexsurvreg(), verbose = TRUE) #> ✖ No memory released. Do not butcher."},{"path":"https://butcher.tidymodels.org/dev/reference/axe-formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing formulas. — axe-formula","title":"Axing formulas. — axe-formula","text":"formulas might capture environment modeling development process carries objects used post- estimation activities.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing formulas. — axe-formula","text":"","code":"# S3 method for formula axe_env(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing formulas. — axe-formula","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing formulas. — axe-formula","text":"Axed formula object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing formulas. — axe-formula","text":"","code":"wrapped_formula <- function() {   some_junk_in_environment <- runif(1e6)   ex <- as.formula(paste(\"y ~\", paste(LETTERS, collapse = \"+\")))   return(ex) }  lobstr::obj_size(wrapped_formula()) #> 8.01 MB lobstr::obj_size(butcher(wrapped_formula())) #> 6.42 kB  wrapped_quosure <- function() {   some_junk_in_environment <- runif(1e6)   out <- rlang::quo(x)   return(out) } lobstr::obj_size(wrapped_quosure()) #> 8.00 MB lobstr::obj_size(butcher(wrapped_quosure)) #> 17.86 kB"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-function.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing functions. — axe-function","title":"Axing functions. — axe-function","text":"Functions stored model objects often heavy environments bytecode attached. avoid breaking post-estimation functions model object, butchered_function class appended.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing functions. — axe-function","text":"","code":"# S3 method for `function` axe_env(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing functions. — axe-function","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing functions. — axe-function","text":"Axed function.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing functions. — axe-function","text":"","code":"# \\donttest{ # Load libraries suppressWarnings(suppressMessages(library(caret)))  data(iris) train_data <- iris[, 1:4] train_classes <- iris[, 5]  train_fit <- train(train_data, train_classes,                    method = \"knn\",                    preProcess = c(\"center\", \"scale\"),                    tuneLength = 10,                    trControl = trainControl(method = \"cv\"))  out <- axe_env(train_fit$modelInfo$prob, verbose = TRUE) #> ✔ Memory released: \"0 B\" #> ✖ Could not add <butchered> class out <- axe_env(train_fit$modelInfo$levels, verbose = TRUE) #> ✔ Memory released: \"0 B\" #> ✖ Could not add <butchered> class out <- axe_env(train_fit$modelInfo$predict, verbose = TRUE) #> ✔ Memory released: \"2.47 kB\" #> ✖ Could not add <butchered> class # }"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-gam.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing a gam. — axe-gam","title":"Axing a gam. — axe-gam","text":"gam objects created mgcv package.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-gam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing a gam. — axe-gam","text":"","code":"# S3 method for gam axe_call(x, verbose = FALSE, ...)  # S3 method for gam axe_ctrl(x, verbose = FALSE, ...)  # S3 method for gam axe_data(x, verbose = FALSE, ...)  # S3 method for gam axe_env(x, verbose = FALSE, ...)  # S3 method for gam axe_fitted(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-gam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing a gam. — axe-gam","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-gam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing a gam. — axe-gam","text":"Axed gam object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-gam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing a gam. — axe-gam","text":"","code":"cars_gam <- mgcv::gam(mpg ~ s(disp, k = 3) + s(wt), data = mtcars) cleaned_gam <- butcher(cars_gam, verbose = TRUE) #> ✔ Memory released: \"13.33 kB\" #> ✖ Disabled: `print()`, `summary()`, `fitted()`, and `residuals()`"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-gausspr.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing a gausspr. — axe-gausspr","title":"Axing a gausspr. — axe-gausspr","text":"gausspr objects created kernlab package, provides means classification, regression, clustering, novelty detection, quantile regression dimensionality reduction. Since fitted model objects kernlab S4, butcher_gausspr class appended.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-gausspr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing a gausspr. — axe-gausspr","text":"","code":"# S3 method for gausspr axe_call(x, verbose = FALSE, ...)  # S3 method for gausspr axe_data(x, verbose = FALSE, ...)  # S3 method for gausspr axe_env(x, verbose = FALSE, ...)  # S3 method for gausspr axe_fitted(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-gausspr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing a gausspr. — axe-gausspr","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-gausspr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing a gausspr. — axe-gausspr","text":"Axed gausspr object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-gausspr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing a gausspr. — axe-gausspr","text":"","code":"suppressWarnings(suppressMessages(library(kernlab)))  test <- gausspr(Species ~ ., data = iris, var = 2) #> Using automatic sigma estimation (sigest) for RBF or laplace kernel   out <- butcher(test, verbose = TRUE) #> ✔ Memory released: \"2.30 kB\" #> ✖ Disabled: `print()`, `summary()`, and `fitted()` #> ✖ Could not add <butchered> class  # Example with simulated regression data x <- seq(-20, 20, 0.1) y <- sin(x)/x + rnorm(401, sd = 0.03) test2 <- gausspr(x, y) #> Using automatic sigma estimation (sigest) for RBF or laplace kernel  out <- butcher(test2, verbose = TRUE) #> ✔ Memory released: \"3.10 kB\" #> ✖ Disabled: `print()`, `summary()`, and `fitted()` #> ✖ Could not add <butchered> class"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-glm.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing a glm. — axe-glm","title":"Axing a glm. — axe-glm","text":"glm objects created base stats package.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-glm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing a glm. — axe-glm","text":"","code":"# S3 method for glm axe_call(x, verbose = FALSE, ...)  # S3 method for glm axe_data(x, verbose = FALSE, ...)  # S3 method for glm axe_env(x, verbose = FALSE, ...)  # S3 method for glm axe_fitted(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-glm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing a glm. — axe-glm","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-glm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing a glm. — axe-glm","text":"Axed glm object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-glm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing a glm. — axe-glm","text":"","code":"cars_glm <- glm(mpg ~ ., data = mtcars) cleaned_glm <- butcher(cars_glm, verbose = TRUE) #> ✖ No memory released. Do not butcher."},{"path":"https://butcher.tidymodels.org/dev/reference/axe-glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing a glmnet. — axe-glmnet","title":"Axing a glmnet. — axe-glmnet","text":"glmnet objects created glmnet package, leveraged fit generalized linear models via penalized maximum likelihood.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing a glmnet. — axe-glmnet","text":"","code":"# S3 method for glmnet axe_call(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing a glmnet. — axe-glmnet","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing a glmnet. — axe-glmnet","text":"Axed glmnet object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-glmnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing a glmnet. — axe-glmnet","text":"","code":"# \\donttest{ if (rlang::is_installed(\"glmnet\")) {  suppressWarnings(suppressMessages(library(parsnip)))  # Wrap a parsnip glmnet model wrapped_parsnip_glmnet <- function() {   some_junk_in_environment <- runif(1e6)   model <- logistic_reg(penalty = 10, mixture = 0.1) %>%     set_engine(\"glmnet\") %>%     fit(as.factor(vs) ~ ., data = mtcars)   return(model$fit) }  out <- butcher(wrapped_parsnip_glmnet(), verbose = TRUE)  } # }"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-kknn.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing an kknn. — axe-kknn","title":"Axing an kknn. — axe-kknn","text":"kknn objects created kknn package, utilized weighted k-Nearest Neighbors classification, regression clustering.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-kknn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing an kknn. — axe-kknn","text":"","code":"# S3 method for kknn axe_call(x, verbose = FALSE, ...)  # S3 method for kknn axe_env(x, verbose = FALSE, ...)  # S3 method for kknn axe_fitted(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-kknn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing an kknn. — axe-kknn","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-kknn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing an kknn. — axe-kknn","text":"Axed kknn object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-kknn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing an kknn. — axe-kknn","text":"","code":"# Load libraries suppressWarnings(suppressMessages(library(parsnip))) suppressWarnings(suppressMessages(library(rsample))) suppressWarnings(suppressMessages(library(rpart))) suppressWarnings(suppressMessages(library(kknn)))  # Load data set.seed(1234) split <- initial_split(kyphosis, props = 9/10) spine_train <- training(split)  # Create model and fit kknn_fit <- nearest_neighbor(mode = \"classification\",                              neighbors = 3,                              weight_func = \"gaussian\",                              dist_power = 2) %>%   set_engine(\"kknn\") %>%   fit(Kyphosis ~ ., data = spine_train)  out <- butcher(kknn_fit, verbose = TRUE) #> ✔ Memory released: \"7.67 kB\"  # \\donttest{ # Another kknn model object m <- dim(iris)[1] val <- sample(1:m,               size = round(m/3),               replace = FALSE,               prob = rep(1/m, m)) iris.learn <- iris[-val,] iris.valid <- iris[val,] kknn_fit <- kknn(Species ~ .,                  iris.learn,                  iris.valid,                  distance = 1,                  kernel = \"triangular\") out <- butcher(kknn_fit, verbose = TRUE) #> ✔ Memory released: \"46.46 kB\" #> ✖ Disabled: `print()`, `summary()`, and `fitted()` # }"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-ksvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing a ksvm object. — axe-ksvm","title":"Axing a ksvm object. — axe-ksvm","text":"ksvm objects created kernlab package, provides means classification, regression, clustering, novelty detection, quantile regression dimensionality reduction. Since fitted model objects kernlab S4, butcher_ksvm class appended.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-ksvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing a ksvm object. — axe-ksvm","text":"","code":"# S3 method for ksvm axe_call(x, verbose = FALSE, ...)  # S3 method for ksvm axe_data(x, verbose = FALSE, ...)  # S3 method for ksvm axe_fitted(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-ksvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing a ksvm object. — axe-ksvm","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-ksvm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing a ksvm object. — axe-ksvm","text":"Axed ksvm object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-ksvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing a ksvm object. — axe-ksvm","text":"","code":"# \\donttest{ # Load libraries suppressWarnings(suppressMessages(library(parsnip))) suppressWarnings(suppressMessages(library(kernlab)))  # Load data data(spam)  # Create model and fit ksvm_class <- svm_poly(mode = \"classification\") %>%   set_engine(\"kernlab\") %>%   fit(type ~ ., data = spam) #>  Setting default kernel parameters    out <- butcher(ksvm_class, verbose = TRUE) #> ✖ No memory released. Do not butcher. # }"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing an lm. — axe-lm","title":"Axing an lm. — axe-lm","text":"lm objects created base stats package.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing an lm. — axe-lm","text":"","code":"# S3 method for lm axe_call(x, verbose = FALSE, ...)  # S3 method for lm axe_env(x, verbose = FALSE, ...)  # S3 method for lm axe_fitted(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing an lm. — axe-lm","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing an lm. — axe-lm","text":"Axed lm object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing an lm. — axe-lm","text":"","code":"# Load libraries suppressWarnings(suppressMessages(library(parsnip))) suppressWarnings(suppressMessages(library(rsample)))  # Load data split <- initial_split(mtcars, props = 9/10) car_train <- training(split)  # Create model and fit lm_fit <- linear_reg() %>%   set_engine(\"lm\") %>%   fit(mpg ~ ., data = car_train)  out <- butcher(lm_fit, verbose = TRUE) #> ✔ Memory released: \"12.01 kB\"  # Another lm object wrapped_lm <- function() {   some_junk_in_environment <- runif(1e6)   fit <- lm(mpg ~ ., data = mtcars)   return(fit) }  # Remove junk cleaned_lm <- axe_env(wrapped_lm(), verbose = TRUE) #> ✔ Memory released: \"8.08 MB\"  # Check size lobstr::obj_size(cleaned_lm) #> 23.18 kB  # Compare environment in terms component lobstr::obj_size(attr(wrapped_lm()$terms, \".Environment\")) #> 8.02 MB lobstr::obj_size(attr(cleaned_lm$terms, \".Environment\")) #> 0 B"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-mda.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing a mda. — axe-mda","title":"Axing a mda. — axe-mda","text":"mda objects created mda package, leveraged carry mixture discriminant analysis.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-mda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing a mda. — axe-mda","text":"","code":"# S3 method for mda axe_call(x, verbose = FALSE, ...)  # S3 method for mda axe_env(x, verbose = FALSE, ...)  # S3 method for mda axe_fitted(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-mda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing a mda. — axe-mda","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-mda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing a mda. — axe-mda","text":"Axed mda object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-mda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing a mda. — axe-mda","text":"","code":"suppressWarnings(suppressMessages(library(mda)))  fit <- mda(Species ~ ., data = iris) out <- butcher(fit, verbose = TRUE) #> ✔ Memory released: \"11.02 kB\" #> ✖ Disabled: `print()`, `summary()`, and `update()`  # Another mda object data(glass) wrapped_mda <- function() {   some_junk_in_environment <- runif(1e6)   fit <- mda(Type ~ ., data = glass)   return(fit) }  lobstr::obj_size(wrapped_mda()) #> 8.06 MB lobstr::obj_size(butcher(wrapped_mda())) #> 29.60 kB"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-model_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing an model_fit. — axe-model_fit","title":"Axing an model_fit. — axe-model_fit","text":"model_fit objects created parsnip package.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-model_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing an model_fit. — axe-model_fit","text":"","code":"# S3 method for model_fit axe_call(x, verbose = FALSE, ...)  # S3 method for model_fit axe_ctrl(x, verbose = FALSE, ...)  # S3 method for model_fit axe_data(x, verbose = FALSE, ...)  # S3 method for model_fit axe_env(x, verbose = FALSE, ...)  # S3 method for model_fit axe_fitted(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-model_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing an model_fit. — axe-model_fit","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-model_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing an model_fit. — axe-model_fit","text":"Axed model_fit object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-model_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing an model_fit. — axe-model_fit","text":"","code":"suppressWarnings(suppressMessages(library(parsnip))) suppressWarnings(suppressMessages(library(rpart)))  # Create model and fit lm_fit <- linear_reg() %>%   set_engine(\"lm\") %>%   fit(mpg ~ ., data = mtcars)  out <- butcher(lm_fit, verbose = TRUE) #> ✔ Memory released: \"6.52 kB\"  # Another parsnip model rpart_fit <- decision_tree(mode = \"regression\") %>%   set_engine(\"rpart\") %>%   fit(mpg ~ ., data = mtcars, minsplit = 5, cp = 0.1)  out <- butcher(rpart_fit, verbose = TRUE) #> ✔ Memory released: \"54.83 kB\""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-multnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing an multnet. — axe-multnet","title":"Axing an multnet. — axe-multnet","text":"multnet objects created carrying multinomial regression glmnet package.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-multnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing an multnet. — axe-multnet","text":"","code":"# S3 method for multnet axe_call(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-multnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing an multnet. — axe-multnet","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-multnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing an multnet. — axe-multnet","text":"Axed multnet object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-multnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing an multnet. — axe-multnet","text":"","code":"# \\donttest{ if (rlang::is_installed(\"glmnet\")) {  # Load libraries suppressWarnings(suppressMessages(library(parsnip)))  # Load data set.seed(1234) predictrs <- matrix(rnorm(100*20), ncol = 20) colnames(predictrs) <- paste0(\"a\", seq_len(ncol(predictrs))) response <- as.factor(sample(1:4, 100, replace = TRUE))  # Create model and fit multnet_fit <- multinom_reg(penalty = 0.1) %>%   set_engine(\"glmnet\") %>%   fit_xy(x = predictrs, y = response)  out <- butcher(multnet_fit, verbose = TRUE)  } # }"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-nnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing a nnet. — axe-nnet","title":"Axing a nnet. — axe-nnet","text":"nnet objects created nnet package, leveraged fit multilayer perceptron models.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-nnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing a nnet. — axe-nnet","text":"","code":"# S3 method for nnet axe_call(x, verbose = FALSE, ...)  # S3 method for nnet axe_env(x, verbose = FALSE, ...)  # S3 method for nnet axe_fitted(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-nnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing a nnet. — axe-nnet","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-nnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing a nnet. — axe-nnet","text":"Axed nnet object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-nnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing a nnet. — axe-nnet","text":"","code":"# Load libraries suppressWarnings(suppressMessages(library(parsnip))) suppressWarnings(suppressMessages(library(nnet)))  # Create and fit model nnet_fit <- mlp(\"classification\", hidden_units = 2) %>%   set_engine(\"nnet\") %>%   fit(Species ~ ., data = iris)  out <- butcher(nnet_fit, verbose = TRUE) #> ✔ Memory released: \"13.19 kB\"  # Another nnet object targets <- class.ind(c(rep(\"setosa\", 50),                        rep(\"versicolor\", 50),                        rep(\"virginica\", 50)))  fit <- nnet(iris[,1:4],             targets,             size = 2,             rang = 0.1,             decay = 5e-4,             maxit = 20) #> # weights:  19 #> initial  value 112.296035  #> iter  10 value 73.328732 #> iter  20 value 38.108142 #> final  value 38.108142  #> stopped after 20 iterations  out <- butcher(fit, verbose = TRUE) #> ✔ Memory released: \"4.95 kB\" #> ✖ Disabled: `fitted()`, `predict() with no new data`, and `dimnames(axed_object$fitted.values)`"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-randomForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing an randomForest. — axe-randomForest","title":"Axing an randomForest. — axe-randomForest","text":"randomForest objects created randomForest package, used train random forests based Breiman's 2001 work. package supports ensembles classification regression trees.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-randomForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing an randomForest. — axe-randomForest","text":"","code":"# S3 method for randomForest axe_call(x, verbose = FALSE, ...)  # S3 method for randomForest axe_ctrl(x, verbose = FALSE, ...)  # S3 method for randomForest axe_env(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-randomForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing an randomForest. — axe-randomForest","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-randomForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing an randomForest. — axe-randomForest","text":"Axed randomForest object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-randomForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing an randomForest. — axe-randomForest","text":"","code":"# Load libraries suppressWarnings(suppressMessages(library(parsnip))) suppressWarnings(suppressMessages(library(rsample))) suppressWarnings(suppressMessages(library(rpart))) suppressWarnings(suppressMessages(library(randomForest)))  # Load data set.seed(1234) split <- initial_split(kyphosis, props = 9/10) spine_train <- training(split)  # Create model and fit randomForest_fit <- rand_forest(mode = \"classification\",                                 mtry = 2,                                 trees = 2,                                 min_n = 3) %>%   set_engine(\"randomForest\") %>%   fit_xy(x = spine_train[,2:4], y = spine_train$Kyphosis)  out <- butcher(randomForest_fit, verbose = TRUE) #> ✔ Memory released: \"192 B\"  # Another randomForest object wrapped_rf <- function() {   some_junk_in_environment <- runif(1e6)   randomForest_fit <- randomForest(mpg ~ ., data = mtcars)   return(randomForest_fit) }  # Remove junk cleaned_rf <- axe_env(wrapped_rf(), verbose = TRUE) #> ✔ Memory released: \"8.06 MB\"  # Check size lobstr::obj_size(cleaned_rf) #> 428 kB"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-ranger.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing an ranger. — axe-ranger","title":"Axing an ranger. — axe-ranger","text":"ranger objects created ranger package, used means quickly train random forests. package supports ensembles classification, regression, survival probability prediction trees. Given reliance post processing functions model object, like importance_pvalues treeInfo, first class listed, butcher_ranger class appended.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-ranger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing an ranger. — axe-ranger","text":"","code":"# S3 method for ranger axe_call(x, verbose = FALSE, ...)  # S3 method for ranger axe_fitted(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-ranger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing an ranger. — axe-ranger","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-ranger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing an ranger. — axe-ranger","text":"Axed ranger object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-ranger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing an ranger. — axe-ranger","text":"","code":"# Load libraries suppressWarnings(suppressMessages(library(parsnip))) suppressWarnings(suppressMessages(library(rsample))) suppressWarnings(suppressMessages(library(ranger)))  # Load data set.seed(1234) split <- initial_split(iris, props = 9/10) iris_train <- training(split)  # Create model and fit ranger_fit <- rand_forest(mode = \"classification\",                           mtry = 2,                           trees = 20,                           min_n = 3) %>%   set_engine(\"ranger\") %>%   fit(Species ~ ., data = iris_train)  out <- butcher(ranger_fit, verbose = TRUE) #> ✖ No memory released. Do not butcher.  # Another ranger object wrapped_ranger <- function() {   n <- 100   p <- 400   dat <- data.frame(y = factor(rbinom(n, 1, .5)), replicate(p, runif(n)))   fit <- ranger(y ~ ., dat, importance = \"impurity_corrected\")   return(fit) }  cleaned_ranger <- axe_fitted(wrapped_ranger(), verbose = TRUE) #> ✔ Memory released: \"392 B\" #> ✖ Disabled: `predictions()` #> ✖ Could not add <butchered> class"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing a recipe object. — axe-recipe","title":"Axing a recipe object. — axe-recipe","text":"recipe objects created recipes package, leveraged set data pre-processing tools. recipes work sequentially defining pre-processing step. implementation step, however, results class bundle axe methods related recipe objects general . Note butchered class added recipe whole, pre-processing step.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing a recipe object. — axe-recipe","text":"","code":"# S3 method for recipe axe_env(x, verbose = FALSE, ...)  # S3 method for step axe_env(x, ...)  # S3 method for step_arrange axe_env(x, ...)  # S3 method for step_filter axe_env(x, ...)  # S3 method for step_mutate axe_env(x, ...)  # S3 method for step_slice axe_env(x, ...)  # S3 method for step_impute_bag axe_env(x, ...)  # S3 method for step_bagimpute axe_env(x, ...)  # S3 method for step_impute_knn axe_env(x, ...)  # S3 method for step_knnimpute axe_env(x, ...)  # S3 method for step_geodist axe_env(x, ...)  # S3 method for step_interact axe_env(x, ...)  # S3 method for step_ratio axe_env(x, ...)  # S3 method for quosure axe_env(x, ...)  # S3 method for recipe axe_fitted(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing a recipe object. — axe-recipe","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing a recipe object. — axe-recipe","text":"Axed recipe object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-recipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing a recipe object. — axe-recipe","text":"","code":"suppressPackageStartupMessages(library(recipes)) library(modeldata)  data(biomass)  biomass_tr <- biomass[biomass$dataset == \"Training\",] rec <- recipe(HHV ~ carbon + hydrogen + oxygen + nitrogen + sulfur,               data = biomass_tr) %>%   step_center(all_predictors()) %>%   step_scale(all_predictors()) %>%   step_spatialsign(all_predictors())  out <- butcher(rec, verbose = TRUE) #> ✔ Memory released: \"68.15 kB\"  # Another recipe object wrapped_recipes <- function() {   some_junk_in_environment <- runif(1e6)   return(     recipe(mpg ~ cyl, data = mtcars) %>%       step_center(all_predictors()) %>%       step_scale(all_predictors()) %>%       prep()   ) }  # Remove junk in environment cleaned1 <- axe_env(wrapped_recipes(), verbose = TRUE) #> ✔ Memory released: \"8.11 MB\" # Replace prepared training data with zero-row slice cleaned2 <- axe_fitted(wrapped_recipes(), verbose = TRUE) #> ✔ Memory released: \"296 B\"  # Check size lobstr::obj_size(cleaned1) #> 12.97 kB lobstr::obj_size(cleaned2) #> 8.02 MB"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-rpart.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing a rpart. — axe-rpart","title":"Axing a rpart. — axe-rpart","text":"rpart objects created rpart package, used recursive partitioning classification, regression survival trees.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-rpart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing a rpart. — axe-rpart","text":"","code":"# S3 method for rpart axe_call(x, verbose = FALSE, ...)  # S3 method for rpart axe_ctrl(x, verbose = FALSE, ...)  # S3 method for rpart axe_data(x, verbose = FALSE, ...)  # S3 method for rpart axe_env(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-rpart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing a rpart. — axe-rpart","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-rpart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing a rpart. — axe-rpart","text":"Axed rpart object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-rpart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing a rpart. — axe-rpart","text":"","code":"# Load libraries suppressWarnings(suppressMessages(library(parsnip))) suppressWarnings(suppressMessages(library(rsample))) suppressWarnings(suppressMessages(library(rpart))) suppressWarnings(library(lobstr))  # Load data set.seed(1234) split <- initial_split(mtcars, props = 9/10) car_train <- training(split)  # Create model and fit rpart_fit <- decision_tree(mode = \"regression\") %>%   set_engine(\"rpart\") %>%   fit(mpg ~ ., data = car_train, minsplit = 5, cp = 0.1)  out <- butcher(rpart_fit, verbose = TRUE) #> ✔ Memory released: \"17.50 kB\"  # Another rpart object wrapped_rpart <- function() {   some_junk_in_environment <- runif(1e6)   fit <- rpart(Kyphosis ~ Age + Number + Start,                data = kyphosis,                x = TRUE, y = TRUE)   return(fit) }  # Remove junk cleaned_rpart <- axe_env(wrapped_rpart(), verbose = TRUE) #> ✔ Memory released: \"8.07 MB\"  # Check size lobstr::obj_size(cleaned_rpart) #> 53.42 kB"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-sclass.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing a sclass object. — axe-sclass","title":"Axing a sclass object. — axe-sclass","text":"sclass objects byproducts classbagg objects.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-sclass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing a sclass object. — axe-sclass","text":"","code":"# S3 method for sclass axe_call(x, verbose = FALSE, ...)  # S3 method for sclass axe_env(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-sclass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing a sclass object. — axe-sclass","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-sclass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing a sclass object. — axe-sclass","text":"Axed sclass object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-sclass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing a sclass object. — axe-sclass","text":"","code":"# Load libraries suppressWarnings(suppressMessages(library(ipred))) suppressWarnings(suppressMessages(library(rpart))) suppressWarnings(suppressMessages(library(MASS)))  # Load data data(\"GlaucomaM\", package = \"TH.data\")  classbagg_fit <- bagging(Class ~ ., data = GlaucomaM, coob = TRUE)  out <- butcher(classbagg_fit$mtrees[[1]], verbose = TRUE) #> ✔ Memory released: \"4.26 MB\"  # Another classbagg object wrapped_classbagg <- function() {   some_junk_in_environment <- runif(1e6)   fit <- bagging(Species ~ .,                  data = iris,                  nbagg = 10,                  coob = TRUE)   return(fit) }  # Remove junk cleaned_classbagg <- butcher(wrapped_classbagg(), verbose = TRUE) #> ✔ Memory released: \"12.43 MB\" #> ✖ Disabled: `print()` and `summary()`  # Check size lobstr::obj_size(cleaned_classbagg) #> 183.67 kB"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-spark.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing a spark object. — axe-spark","title":"Axing a spark object. — axe-spark","text":"spark objects created sparklyr package, R interface Apache Spark. axe methods available spark objects designed interoperability maintained. words, multilingual machine learning team, butchered spark objects instantiated sparklyr can still serialized disk, work Python, deployed Scala, etc. also worth noting spark objects created sparklyr lot metadata attached , including limited formula, dataset, model, index labels, etc. axe functions provided parsing model object prior saving disk, loading disk. Traditional R save functions available objects, functionality provided sparklyr::ml_save. function gives user option keep either pipeline_model pipeline, objects retained butchering, yet removal one might conducive freeing memory disk.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-spark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing a spark object. — axe-spark","text":"","code":"# S3 method for ml_model axe_call(x, verbose = FALSE, ...)  # S3 method for ml_model axe_ctrl(x, verbose = FALSE, ...)  # S3 method for ml_model axe_data(x, verbose = FALSE, ...)  # S3 method for ml_model axe_fitted(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-spark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing a spark object. — axe-spark","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-spark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing a spark object. — axe-spark","text":"Axed spark object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-spark.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing a spark object. — axe-spark","text":"","code":"if (FALSE) { if (FALSE) {  suppressWarnings(suppressMessages(library(sparklyr)))  sc <- spark_connect(master = \"local\")  iris_tbls <- sdf_copy_to(sc, iris, overwrite = TRUE) %>%   sdf_random_split(train = 2/3, validation = 2/3, seed = 2018)  train <- iris_tbls$train spark_fit <- ml_logistic_regression(train, Species ~ .)  out <- butcher(spark_fit, verbose = TRUE)  spark_disconnect(sc)  } }"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-survreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing an survreg. — axe-survreg","title":"Axing an survreg. — axe-survreg","text":"survreg objects created survival package. returned survreg function, representing fitted parametric survival models.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-survreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing an survreg. — axe-survreg","text":"","code":"# S3 method for survreg axe_call(x, verbose = FALSE, ...)  # S3 method for survreg axe_data(x, verbose = FALSE, ...)  # S3 method for survreg axe_env(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-survreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing an survreg. — axe-survreg","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-survreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing an survreg. — axe-survreg","text":"Axed survreg object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-survreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing an survreg. — axe-survreg","text":"","code":"# Load libraries suppressWarnings(suppressMessages(library(parsnip))) suppressWarnings(suppressMessages(library(survival)))  # Create model and fit survreg_fit <- surv_reg(mode = \"regression\", dist = \"weibull\") %>%   set_engine(\"survival\") %>%   fit(Surv(futime, fustat) ~ 1, data = ovarian) #> Warning: `surv_reg()` was deprecated in parsnip 0.1.6. #> Please use `survival_reg()` instead.  out <- butcher(survreg_fit, verbose = TRUE) #> ✔ Memory released: \"5.42 kB\"  # Another survreg object wrapped_survreg <- function() {   some_junk_in_environment <- runif(1e6)   fit <- survreg(Surv(time, status) ~ ph.ecog + age + strata(sex),                  data = lung)   return(fit) }  # Remove junk cleaned_survreg <- butcher(wrapped_survreg(), verbose = TRUE) #> ✔ Memory released: \"8.08 MB\" #> ✖ Disabled: `print()`, `summary()`, and `residuals()`  # Check size lobstr::obj_size(cleaned_survreg) #> 11.58 kB"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-survreg.penal.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing an survreg.penal — axe-survreg.penal","title":"Axing an survreg.penal — axe-survreg.penal","text":"survreg.penal objects created survival package. returned survreg function, representing fitted parametric survival models.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-survreg.penal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing an survreg.penal — axe-survreg.penal","text":"","code":"# S3 method for survreg.penal axe_call(x, verbose = FALSE, ...)  # S3 method for survreg.penal axe_data(x, verbose = FALSE, ...)  # S3 method for survreg.penal axe_env(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-survreg.penal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing an survreg.penal — axe-survreg.penal","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-survreg.penal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing an survreg.penal — axe-survreg.penal","text":"Axed survreg object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-survreg.penal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing an survreg.penal — axe-survreg.penal","text":"","code":"# Load libraries suppressWarnings(suppressMessages(library(parsnip))) suppressWarnings(suppressMessages(library(survival))) suppressWarnings(library(lobstr))  # Create model and fit survreg_fit <- surv_reg(mode = \"regression\", dist = \"weibull\") %>%   set_engine(\"survival\") %>%   fit(Surv(time, status) ~ rx, data = rats) #> Warning: `surv_reg()` was deprecated in parsnip 0.1.6. #> Please use `survival_reg()` instead.  out <- butcher(survreg_fit, verbose = TRUE) #> ✔ Memory released: \"19.63 kB\"  # Another survreg.penal object wrapped_survreg.penal <- function() {   some_junk_in_environment <- runif(1e6)   fit <- survreg(Surv(time, status) ~ rx,                  data = rats, subset = (sex == \"f\"))   return(fit) }  # Remove junk cleaned_sp <- axe_env(wrapped_survreg.penal(), verbose = TRUE) #> ✔ Memory released: \"8.10 MB\"  # Check size lobstr::obj_size(cleaned_sp) #> 13.74 kB"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing for terms inputs. — axe-terms","title":"Axing for terms inputs. — axe-terms","text":"Generics related axing objects term class.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing for terms inputs. — axe-terms","text":"","code":"# S3 method for terms axe_env(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing for terms inputs. — axe-terms","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing for terms inputs. — axe-terms","text":"Axed terms object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing for terms inputs. — axe-terms","text":"","code":"# Using lm wrapped_lm <- function() {   some_junk_in_environment <- runif(1e6)   fit <- lm(mpg ~ ., data = mtcars)   return(fit) }  # Remove junk cleaned_lm <- axe_env(wrapped_lm(), verbose = TRUE) #> ✔ Memory released: \"8.02 MB\"  # Check size lobstr::obj_size(cleaned_lm) #> 23.18 kB  # Compare environment in terms component lobstr::obj_size(attr(wrapped_lm()$terms, \".Environment\")) #> 8.02 MB lobstr::obj_size(attr(cleaned_lm$terms, \".Environment\")) #> 0 B  # \\donttest{ # Using rpart suppressWarnings(library(rpart))  wrapped_rpart <- function() {   some_junk_in_environment <- runif(1e6)   fit <- rpart(Kyphosis ~ Age + Number + Start,                data = kyphosis,                x = TRUE,                y = TRUE)   return(fit) }  lobstr::obj_size(wrapped_rpart()) #> 8.05 MB lobstr::obj_size(axe_env(wrapped_rpart())) #> 53.42 kB # }"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-train.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing a train object. — axe-train","title":"Axing a train object. — axe-train","text":"train objects created caret package.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-train.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing a train object. — axe-train","text":"","code":"# S3 method for train axe_call(x, verbose = FALSE, ...)  # S3 method for train axe_ctrl(x, verbose = FALSE, ...)  # S3 method for train axe_data(x, verbose = FALSE, ...)  # S3 method for train axe_env(x, verbose = FALSE, ...)  # S3 method for train axe_fitted(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-train.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing a train object. — axe-train","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-train.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing a train object. — axe-train","text":"Axed train object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-train.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing a train object. — axe-train","text":"","code":"# Load libraries suppressWarnings(suppressMessages(library(caret)))  data(iris) train_data <- iris[, 1:4] train_classes <- iris[, 5]  train_fit <- train(train_data, train_classes,                    method = \"knn\",                    preProcess = c(\"center\", \"scale\"),                    tuneLength = 10,                    trControl = trainControl(method = \"cv\"))  out <- butcher(train_fit, verbose = TRUE) #> ✔ Memory released: \"32.20 kB\" #> ✖ Disabled: `summary()` and `update()`"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-train.recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing a train.recipe object. — axe-train.recipe","title":"Axing a train.recipe object. — axe-train.recipe","text":"train.recipe objects slightly different train objects created caret package also includes instructions recipe data pre-processing. Axing functions specific train.recipe thus included additional steps required remove parts train.recipe objects.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-train.recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing a train.recipe object. — axe-train.recipe","text":"","code":"# S3 method for train.recipe axe_call(x, ...)  # S3 method for train.recipe axe_ctrl(x, ...)  # S3 method for train.recipe axe_data(x, ...)  # S3 method for train.recipe axe_env(x, ...)  # S3 method for train.recipe axe_fitted(x, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-train.recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing a train.recipe object. — axe-train.recipe","text":"x model object. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-train.recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing a train.recipe object. — axe-train.recipe","text":"Axed train.recipe object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-train.recipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing a train.recipe object. — axe-train.recipe","text":"","code":"# \\donttest{ suppressWarnings(suppressMessages(library(recipes))) suppressWarnings(suppressMessages(library(caret))) library(modeldata)  data(biomass) recipe <- biomass %>%   recipe(HHV ~ carbon + hydrogen + oxygen + nitrogen + sulfur) %>%   step_center(all_predictors()) %>%   step_scale(all_predictors()) %>%   step_spatialsign(all_predictors())  train.recipe_fit <- train(recipe, biomass,                           method = \"svmRadial\",                           metric = \"RMSE\")  out <- butcher(train.recipe_fit, verbose = TRUE) #> ✔ Memory released: \"183.39 kB\" # }"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-xgb.Booster.html","id":null,"dir":"Reference","previous_headings":"","what":"Axing a xgb.Booster. — axe-xgb.Booster","title":"Axing a xgb.Booster. — axe-xgb.Booster","text":"xgb.Booster objects created xgboost package, provides efficient scalable implementations gradient boosted decision trees. Given reliance post processing functions model object, like xgb.Booster.complete, first class listed, butcher_xgb.Booster class appended.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-xgb.Booster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axing a xgb.Booster. — axe-xgb.Booster","text":"","code":"# S3 method for xgb.Booster axe_call(x, verbose = FALSE, ...)  # S3 method for xgb.Booster axe_env(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe-xgb.Booster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axing a xgb.Booster. — axe-xgb.Booster","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-xgb.Booster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axing a xgb.Booster. — axe-xgb.Booster","text":"Axed xgb.Booster object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe-xgb.Booster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axing a xgb.Booster. — axe-xgb.Booster","text":"","code":"suppressWarnings(suppressMessages(library(xgboost))) suppressWarnings(suppressMessages(library(parsnip)))  data(agaricus.train) bst <- xgboost(data = agaricus.train$data,                label = agaricus.train$label,                eta = 1,                nthread = 2,                nrounds = 2,                eval_metric = \"logloss\",                objective = \"binary:logistic\",                verbose = 0)  out <- butcher(bst, verbose = TRUE) #> ✔ Memory released: \"31.12 kB\" #> ✖ Disabled: `print()`, `summary()`, and `xgb.Booster.complete()` #> ✖ Could not add <butchered> class  # Another xgboost model fit <- boost_tree(mode = \"classification\", trees = 20) %>%   set_engine(\"xgboost\", eval_metric = \"mlogloss\") %>%   fit(Species ~ ., data = iris)  out <- butcher(fit, verbose = TRUE) #> ✖ No memory released. Do not butcher."},{"path":"https://butcher.tidymodels.org/dev/reference/axe_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Axe a call. — axe_call","title":"Axe a call. — axe_call","text":"Replace call object attached modeling objects placeholder.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axe a call. — axe_call","text":"","code":"axe_call(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axe a call. — axe_call","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axe a call. — axe_call","text":"Model object without call attribute.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_call.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Axe a call. — axe_call","text":"See following help topics details individual methods:butcher axe-C5.0: C5.0 axe-classbagg: classbagg axe-earth: earth axe-elnet: elnet axe-flexsurvreg: flexsurvreg axe-gam: gam axe-gausspr: gausspr axe-glm: glm axe-glmnet: glmnet axe-kknn: kknn axe-ksvm: ksvm axe-lm: lm axe-mda: mda axe-model_fit: model_fit axe-multnet: multnet axe-nnet: nnet axe-randomForest: randomForest axe-ranger: ranger axe-rpart: rpart axe-sclass: sclass axe-spark: ml_model axe-survreg: survreg axe-survreg.penal: survreg.penal axe-train: train axe-train.recipe: train.recipe axe-xgb.Booster: xgb.Booster","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_ctrl.html","id":null,"dir":"Reference","previous_headings":"","what":"Axe controls. — axe_ctrl","title":"Axe controls. — axe_ctrl","text":"Remove controls training attached modeling objects.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_ctrl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axe controls. — axe_ctrl","text":"","code":"axe_ctrl(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe_ctrl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axe controls. — axe_ctrl","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_ctrl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axe controls. — axe_ctrl","text":"Model object without control tuning parameters training.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_ctrl.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Axe controls. — axe_ctrl","text":"See following help topics details individual methods:butcher axe-C5.0: C5.0 axe-gam: gam axe-model_fit: model_fit axe-randomForest: randomForest axe-rpart: rpart axe-spark: ml_model axe-train: train axe-train.recipe: train.recipe","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Axe data. — axe_data","title":"Axe data. — axe_data","text":"Remove training data attached modeling objects.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axe data. — axe_data","text":"","code":"axe_data(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axe data. — axe_data","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axe data. — axe_data","text":"Model object without training data","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_data.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Axe data. — axe_data","text":"See following help topics details individual methods:butcher axe-classbagg: classbagg axe-earth: earth axe-gam: gam axe-gausspr: gausspr axe-glm: glm axe-ksvm: ksvm axe-model_fit: model_fit axe-rpart: rpart axe-spark: ml_model axe-survreg: survreg axe-survreg.penal: survreg.penal axe-train: train axe-train.recipe: train.recipe","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Axe an environment. — axe_env","title":"Axe an environment. — axe_env","text":"Remove environment(s) attached modeling objects required downstream analysis pipeline. found, environment replaced rlang::base_env().","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axe an environment. — axe_env","text":"","code":"axe_env(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axe an environment. — axe_env","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axe an environment. — axe_env","text":"Model object empty environments.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_env.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Axe an environment. — axe_env","text":"See following help topics details individual methods:butcher axe-classbagg: classbagg axe-flexsurvreg: flexsurvreg axe-formula: formula axe-function: function axe-gam: gam axe-gausspr: gausspr axe-glm: glm axe-kknn: kknn axe-lm: lm axe-mda: mda axe-model_fit: model_fit axe-nnet: nnet axe-randomForest: randomForest axe-recipe: quosure, recipe, step, step_arrange, step_bagimpute, step_filter, step_geodist, step_impute_bag, step_impute_knn, step_interact, step_knnimpute, step_mutate, step_ratio, step_slice axe-rpart: rpart axe-sclass: sclass axe-survreg: survreg axe-survreg.penal: survreg.penal axe-terms: terms axe-train: train axe-train.recipe: train.recipe axe-xgb.Booster: xgb.Booster","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_fitted.html","id":null,"dir":"Reference","previous_headings":"","what":"Axe fitted values. — axe_fitted","title":"Axe fitted values. — axe_fitted","text":"Remove fitted values attached modeling objects.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_fitted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axe fitted values. — axe_fitted","text":"","code":"axe_fitted(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/axe_fitted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axe fitted values. — axe_fitted","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_fitted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axe fitted values. — axe_fitted","text":"Model object without fitted values.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/axe_fitted.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Axe fitted values. — axe_fitted","text":"See following help topics details individual methods:butcher axe-C5.0: C5.0 axe-earth: earth axe-gam: gam axe-gausspr: gausspr axe-glm: glm axe-kknn: kknn axe-ksvm: ksvm axe-lm: lm axe-mda: mda axe-model_fit: model_fit axe-nnet: nnet axe-ranger: ranger axe-recipe: recipe axe-spark: ml_model axe-train: train axe-train.recipe: train.recipe","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/butcher-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce the Size of Modeling Objects — butcher-package","title":"Reduce the Size of Modeling Objects — butcher-package","text":"Reduce size modeling objects fitting. parsed-versions original modeling object tested work respective predict functions. Future iterations package support additional analysis functions outside just predict. package provides five S3 generics: axe_call remove call object. axe_ctrl remove controls associated training. axe_data remove original data. axe_env remove inherited environments. axe_fitted remove fitted values. specific attributes model objects chosen often required downstream data analysis functions work often heaviest components fitted object. calling wrapper function butcher, sub-axe functions listed executed model object, returning butchered model object additional butcher class assignment. specific axe_ function called, axed model object also addition butcher class assignment.","code":""},{"path":[]},{"path":"https://butcher.tidymodels.org/dev/reference/butcher-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reduce the Size of Modeling Objects — butcher-package","text":"Maintainer: Davis Vaughan davis@rstudio.com Authors: Joyce Cahoon joyceyu48@gmail.com (ORCID) Max Kuhn max@rstudio.com Alex Hayes alexpghayes@gmail.com contributors: RStudio [copyright holder, funder]","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/butcher.html","id":null,"dir":"Reference","previous_headings":"","what":"Butcher an object. — butcher","title":"Butcher an object. — butcher","text":"Reduce size model object takes less memory disk. Currently, model object stripped point minimal components necessary predict function work remain. Future adjustments function needed avoid removal model fit components ensure works downstream functions.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/butcher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Butcher an object. — butcher","text":"","code":"butcher(x, verbose = FALSE, ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/butcher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Butcher an object. — butcher","text":"x model object. verbose Print information time axe method executed. Notes much memory released functions disabled. Default FALSE. ... additional arguments related axing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/butcher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Butcher an object. — butcher","text":"Axed model object new butcher subclass assignment.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/butcher_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to model object example. — butcher_example","title":"Get path to model object example. — butcher_example","text":"butcher comes bundled example files `inst/extdata` directory. function copied readxl placed make instantiated model objects easy access.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/butcher_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to model object example. — butcher_example","text":"","code":"butcher_example(path = NULL)"},{"path":"https://butcher.tidymodels.org/dev/reference/butcher_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to model object example. — butcher_example","text":"path Name file. `NULL`, example files listed.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/locate.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate part of an object. — locate","title":"Locate part of an object. — locate","text":"Locate specific component object might exist within model object . function restricted items can axed can found.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/locate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate part of an object. — locate","text":"","code":"locate(x, name = NULL)"},{"path":"https://butcher.tidymodels.org/dev/reference/locate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate part of an object. — locate","text":"x model object. name name associated model component interest. defaults NULL. Possible components include: env, call, data, ctrl, fitted.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/locate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locate part of an object. — locate","text":"Location specific component model object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/locate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Locate part of an object. — locate","text":"","code":"lm_fit <- lm(mpg ~ ., data = mtcars) locate(lm_fit, name = \"env\") #> [1] \"x$terms\" locate(lm_fit, name = \"call\") #> [1] \"x$call\""},{"path":"https://butcher.tidymodels.org/dev/reference/new_model_butcher.html","id":null,"dir":"Reference","previous_headings":"","what":"New axe functions for a modeling object. — new_model_butcher","title":"New axe functions for a modeling object. — new_model_butcher","text":"new_model_butcher() instantiate following help   us develop new axe functions around removing parts new   modeling object: Add modeling package Suggests Generate populate axe file R/ Generate populate test file testthat/","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/new_model_butcher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New axe functions for a modeling object. — new_model_butcher","text":"","code":"new_model_butcher(model_class, package_name, open = interactive())"},{"path":"https://butcher.tidymodels.org/dev/reference/new_model_butcher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"New axe functions for a modeling object. — new_model_butcher","text":"model_class string captures class name new model object. package_name string captures package name new model made. open Check user interactive mode, , opens new files editing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Console Messages — ui","title":"Console Messages — ui","text":"console messages created user aware effects removing specific components model object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Console Messages — ui","text":"","code":"memory_released(og, butchered)  assess_object(og, butchered)"},{"path":"https://butcher.tidymodels.org/dev/reference/ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Console Messages — ui","text":"og Original model object. butchered Butchered model object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/weigh.html","id":null,"dir":"Reference","previous_headings":"","what":"Weigh the object. — weigh","title":"Weigh the object. — weigh","text":"Evaluate size element contained model object.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/weigh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weigh the object. — weigh","text":"","code":"weigh(x, threshold = 0, units = \"MB\", ...)"},{"path":"https://butcher.tidymodels.org/dev/reference/weigh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weigh the object. — weigh","text":"x model object. threshold minimum threshold desired model component size display. units units display size component within model object interest. Defaults MB. options include KB GB. ... additional arguments weighing.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/weigh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weigh the object. — weigh","text":"Tibble weights object components decreasing magnitude.","code":""},{"path":"https://butcher.tidymodels.org/dev/reference/weigh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weigh the object. — weigh","text":"","code":"simulate_x <- matrix(runif(1e+6), ncol = 2) simulate_y <- runif(dim(simulate_x)[1]) lm_out <- lm(simulate_y ~ simulate_x) weigh(lm_out) #> # A tibble: 16 × 2 #>    object                size #>    <chr>                <dbl> #>  1 terms            88.0      #>  2 qr.qr            44.0      #>  3 residuals        36.0      #>  4 fitted.values    36.0      #>  5 effects           8.00     #>  6 model.simulate_x  8.00     #>  7 model.simulate_y  4.00     #>  8 call              0.00056  #>  9 coefficients      0.000464 #> 10 qr.qraux          0.00008  #> 11 assign            0.000064 #> 12 qr.pivot          0.000064 #> 13 rank              0.000056 #> 14 qr.tol            0.000056 #> 15 qr.rank           0.000056 #> 16 df.residual       0.000056"},{"path":"https://butcher.tidymodels.org/dev/news/index.html","id":"butcher-development-version","dir":"Changelog","previous_headings":"","what":"butcher (development version)","title":"butcher (development version)","text":"Updated printing memory_released() (#229). Added butcher methods mgcv::gam() (#228).","code":""},{"path":"https://butcher.tidymodels.org/dev/news/index.html","id":"butcher-020","dir":"Changelog","previous_headings":"","what":"butcher 0.2.0","title":"butcher 0.2.0","text":"CRAN release: 2022-06-14 Added axe_fitted() method butcher template slot prepped recipes (@AshesITR, #207). Added butcher methods glm() (#212). Removed axe_fitted() axe_ctrl() xgboost, methods caused problems prediction (#218). Moved usethis fs Suggests (#222). Removed fastICA NMF Suggests. fastICA requires R >= 4.0.0 now, NMF often hard install used one test (#201). Preemptively fixed test related recipes change step_hyperbolic() (#220). Transitioned unit tests make use modeldata::Sacramento rather modeldata::okc anticipation okc’s deprecation upcoming release modeldata (@simonpcouch, #219).","code":""},{"path":"https://butcher.tidymodels.org/dev/news/index.html","id":"butcher-015","dir":"Changelog","previous_headings":"","what":"butcher 0.1.5","title":"butcher 0.1.5","text":"CRAN release: 2021-06-28 Added axe_env() method remove terms environment recipe steps. covers recipe steps, certain steps still need specific methods (@juliasilge, #193).","code":""},{"path":"https://butcher.tidymodels.org/dev/news/index.html","id":"butcher-014","dir":"Changelog","previous_headings":"","what":"butcher 0.1.4","title":"butcher 0.1.4","text":"CRAN release: 2021-03-19 Ensure butcher compatible recipes 0.1.16, steps renamed. Fixed issue survival 3.2-10, butcher using frailty terms incorrectly (#184).","code":""},{"path":"https://butcher.tidymodels.org/dev/news/index.html","id":"butcher-013","dir":"Changelog","previous_headings":"","what":"butcher 0.1.3","title":"butcher 0.1.3","text":"CRAN release: 2021-03-04","code":""},{"path":"https://butcher.tidymodels.org/dev/news/index.html","id":"fixes-0-1-3","dir":"Changelog","previous_headings":"","what":"Fixes","title":"butcher 0.1.3","text":"Fixed issue axing parsnip ‘model_fit’ return underlying model object rather altered ‘model_fit’. Fixed test failures related changes parsnip (#157).","code":""},{"path":"https://butcher.tidymodels.org/dev/news/index.html","id":"butcher-012","dir":"Changelog","previous_headings":"","what":"butcher 0.1.2","title":"butcher 0.1.2","text":"CRAN release: 2020-01-23","code":""},{"path":"https://butcher.tidymodels.org/dev/news/index.html","id":"fixes-0-1-2","dir":"Changelog","previous_headings":"","what":"Fixes","title":"butcher 0.1.2","text":"Examples C50 objects updated reflect data files now located modeldata.","code":""},{"path":"https://butcher.tidymodels.org/dev/news/index.html","id":"butcher-011","dir":"Changelog","previous_headings":"","what":"butcher 0.1.1","title":"butcher 0.1.1","text":"CRAN release: 2020-01-07","code":""},{"path":"https://butcher.tidymodels.org/dev/news/index.html","id":"fixes-0-1-1","dir":"Changelog","previous_headings":"","what":"Fixes","title":"butcher 0.1.1","text":"modeldata added dependency since data files required testing axe methods models objects instantiated testing moved library. glmnet removed dependency since new version depends 3.6.0 greater. Keeping constrain butcher requirement. glmnet tests run locally.","code":""},{"path":"https://butcher.tidymodels.org/dev/news/index.html","id":"butcher-010","dir":"Changelog","previous_headings":"","what":"butcher 0.1.0","title":"butcher 0.1.0","text":"CRAN release: 2019-08-09 Added NEWS.md file track changes package.","code":""}]
